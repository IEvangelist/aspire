---
const { src, poster = 'npt:0:4' } = Astro.props;
---

<div class="asciinema-player-container" data-src={src} data-poster={poster}>
</div>

<style>
    .asciinema-player-container {
        border: 1px solid var(--sl-color-gray-4);
        border-radius: .3rem;
    }
</style>

<script>
    import "asciinema-player/dist/bundle/asciinema-player.css";

    async function initAsciinemaPlayer() {
        try {
            const { create } = await import("asciinema-player");

            const containers = document.querySelectorAll(
                ".asciinema-player-container",
            );

            function createPlayers() {
                containers.forEach((container) => {
                    const src = container.getAttribute("data-src");
                    const poster = container.getAttribute("data-poster");

                    if (src && container instanceof HTMLElement) {
                        // Clear existing player if any
                        container.innerHTML = '';
                        
                        // Get the current theme from the html data-theme attribute
                        const htmlElement = document.documentElement;
                        const currentTheme = htmlElement.getAttribute('data-theme');
                        const theme = currentTheme === 'light' ? 'nord' : 'asciinema';

                        create(src, container, {
                            autoplay: false,
                            loop: true,
                            poster: poster || undefined,
                            fit: "none",
                            preload: true,
                            terminalFontSize: '1.2rem',
                            rows: 15,
                            terminalFontFamily: 'var(--__sl-font-mono)',
                            theme: theme
                        });
                    }
                });
            }

            createPlayers();

            const observer = new MutationObserver((mutations) => {
                mutations.forEach((mutation) => {
                    if (mutation.type === 'attributes' && 
                        mutation.attributeName === 'data-theme' && 
                        mutation.target === document.documentElement) {
                        createPlayers();
                    }
                });
            });

            observer.observe(document.documentElement, {
                attributes: true,
                attributeFilter: ['data-theme']
            });

        } catch (error) {
            console.error("Failed to load asciinema player:", error);
        }
    }

    if (document.readyState === "loading") {
        document.addEventListener("DOMContentLoaded", initAsciinemaPlayer);
    } else {
        initAsciinemaPlayer();
    }
</script>
